{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Deploy VPC, Subnet, IGW, Route Table, and EC2 Instance",
  "Parameters": {
    "KeyName": {
      "Description": "EC2 KeyPair for SSH access (must already exist)",
      "Type": "AWS::EC2::KeyPair::testjuhi"
    },
    "InstanceType": {
      "Description": "EC2 instance type",
      "Type": "String",
      "Default": "t2.micro",
      "AllowedValues": ["t2.micro", "t2.small", "t2.medium"],
      "ConstraintDescription": "Must be a valid EC2 instance type."
    }
  },
  "Resources": {
    "MyVPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsSupport": true,
        "EnableDnsHostnames": true,
        "Tags": [{"Key": "Name", "Value": "MyVPC"}]
      }
    },
    "MySubnet": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "VpcId": { "Ref": "MyVPC" },
        "CidrBlock": "10.0.1.0/24",
        "MapPublicIpOnLaunch": true,
        "AvailabilityZone": { "Fn::Select": [0, { "Fn::GetAZs": "" }] },
        "Tags": [{"Key": "Name", "Value": "MyPublicSubnet"}]
      }
    },
    "MyInternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [{"Key": "Name", "Value": "MyIGW"}]
      }
    },
    "AttachGateway": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": { "Ref": "MyVPC" },
        "InternetGatewayId": { "Ref": "MyInternetGateway" }
      }
    },
    "MyRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": { "Ref": "MyVPC" },
        "Tags": [{"Key": "Name", "Value": "MyPublicRouteTable"}]
      }
    },
    "PublicRoute": {
      "Type": "AWS::EC2::Route",
      "DependsOn": "AttachGateway",
      "Properties": {
        "RouteTableId": { "Ref": "MyRouteTable" },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": { "Ref": "MyInternetGateway" }
      }
    },
    "SubnetRouteTableAssociation": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "SubnetId": { "Ref": "MySubnet" },
        "RouteTableId": { "Ref": "MyRouteTable" }
      }
    },
    "MySecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable SSH and HTTP",
        "VpcId": { "Ref": "MyVPC" },
        "SecurityGroupIngress": [
          { "IpProtocol": "tcp", "FromPort": 22, "ToPort": 22, "CidrIp": "0.0.0.0/0" },
          { "IpProtocol": "tcp", "FromPort": 80, "ToPort": 80, "CidrIp": "0.0.0.0/0" }
        ],
        "Tags": [{"Key": "Name", "Value": "MySG"}]
      }
    },
    "MyEC2Instance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "InstanceType": { "Ref": "InstanceType" },
        "KeyName": { "Ref": "KeyName" },
        "ImageId": "ami-00bb6a80f01f03502",
        "SubnetId": { "Ref": "MySubnet" },
        "SecurityGroupIds": [{ "Ref": "MySecurityGroup" }],
        "Tags": [{"Key": "Name", "Value": "MyEC2Server"}]
      }
    }
  },
  "Outputs": {
    "VPCId": {
      "Description": "VPC ID",
      "Value": { "Ref": "MyVPC" }
    },
    "SubnetId": {
      "Description": "Subnet ID",
      "Value": { "Ref": "MySubnet" }
    },
    "EC2InstanceId": {
      "Description": "Instance ID",
      "Value": { "Ref": "MyEC2Instance" }
    },
    "PublicIP": {
      "Description": "Public IP of the EC2 instance",
      "Value": { "Fn::GetAtt": ["MyEC2Instance", "PublicIp"] }
    }
  }
}

